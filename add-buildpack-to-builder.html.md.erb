---
title: Add Buildpacks to Builders for your Tanzu Build Service
owner: Build Service Team
---

This topic tells you how to add Buildpacks to Builders for your Tanzu Build Service (commonly known as TBS).

## <a id='prereqs'></a> Prerequisites

Create a buildpack using [this guide](https://buildpacks.io/docs/buildpack-author-guide/create-buildpack/) in the Buildpack documentation.

Package a buildpack using [this guide](https://buildpacks.io/docs/buildpack-author-guide/package-a-buildpack/) in the Buildpack documentation. The output of the buildpack creation is a buildpackage.

## <a id='procedure'></a> Procedure

1. Add a buildpack to an existing ClusterStore:

    ```console
    kp clusterstore save <store> -b <buildpackage>
    ```

    Alternatively, you can create a Buildpack resource if you are not using ClusterStores.
    For instructions, see [Create custom ClusterBuildpacks](managing-buildpacks.html.md.erb)

1. (Optional) Create a ClusterStack:

    ```console
    kp clusterstack save <stack> --build-image paketobuildpacks/build:base-cnb --run-image paketobuildpacks/run:base-cnb
    ```

1. Add a buildpack to a custom builder. You can add a buildpack either to a new custom builder or to
   an existing one.

    - To create a new custom builder and add a buildpack, run:

        ```console
        kp builder save <builder> --tag <IMAGE-TAG> --stack <stack> --store <store>  --buildpack <buildpackage>
        ```

    - To add a buildpack to an existing custom builder, run:

        <p class="note"><strong>Note:</strong> This only works with existing custom builders.</p>

        ```console
        kp builder save <builder> -o <order>
        ```

        Where `<order>` is a YAML file describing the new order. If there is only one detection group, with one or multiple buildpacks, you don't need to use an `<order>` file. For example:

        ```consol
        kp builder save <builder> -b <buildpackage1> -b <buildpackage2>...
        ```

1. Update an image to use the updated custom builder:

    ```console
    kp image save <image> --builder <builder>
    ```

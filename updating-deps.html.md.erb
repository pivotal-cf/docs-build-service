---
title: Update your Tanzu Build Service dependencies
owner: Build Service Team
---

This topic tells you how to update your Tanzu Build Service (commonly known as TBS) dependencies.

Keeping applications up-to-date with the latest dependency patches is a core feature of Tanzu Build Service. Updates to dependencies will be propagated to application images. The resources that account for these patches are:

- **ClusterStacks** - Update a ClusterStack to patch operating system packages.

You can use the `kp` CLI to update any resource. See the kpack-cli [help text](https://github.com/vmware-tanzu/kpack-cli/blob/v0.4.0/docs/kp.md) on GitHub.

<p class='note'>
  <strong>Note:</strong> These docs assume you are using kp CLI v0.11.x with Tanzu Build Service v1.13.x.
  If a feature is not working, you might need to upgrade your CLI.
</p>

## <a id='online-update'></a> Updating dependencies

### <a id='dependency-updater'></a> Automatically update dependencies

## Enable Automatic Dependency Updates

TBS dependencies can be configured to be automatically updated. Within a version line, only patch versions are incremented to avoid any possible breaking changes. Users can customize the packages that can be updated through tbs-values or their full deps values.

1. Add the following to tbs-values.yaml:

    ```yaml
      dependency_updates:
      allow: true
      scope: <SCOPE>
      include_packages: [""]
      exclude_packages: [""]
    ```
    Where:
    - `SCOPE` is the list of dependencies you would like to be updated.
        The options are:
        - `stacks-only` (default value): only stacks and builders are updated
        - `all`: stacks, builders, and buildpacks are updated
        - `custom`: this list is empty by default, use the `include_packages` key to add packages to be updated

<p class="note"><strong>Note:</strong> The TBS package install and/or the Full Deps Package install will need to be updated after changing tbs-values</p>

2. Create a secret for VMware Tanzu Network using the `tanzu` cli:

    ```commandline
     tanzu secret registry add tanzunet-creds \
     --server "registry.tanzu.vmware.com" \
     --username "${TANZUNET_REGISTRY_USERNAME}" \
     --password "${TANZUNET_REGISTRY_PASSWORD}" \
     --namespace ${INSTALL_NAMESPACE}
   ```
3. Add the Tanzu Build Service Dependency Updates package repository by running:

   ```
   kubectl apply -f - <<EOF
     apiVersion: packaging.carvel.dev/v1alpha1
     kind: PackageRepository
     metadata:
       name: tbs-dependencies-package-repository
       namespace: tap-install
     spec:
       fetch:
         imgpkgBundle:
           image: registry.tanzu.vmware.com/build-service-dependency-updater/package-repo
           tagSelection:
             semver:
             # this should be TAP major.minor.x
               constraints: "1.8.x"
   EOF
   ```

For more information on adding new buildpack versions or updating buildpacks out of band, see the [Creating Custom Cluster Buildpacks](creating-custom-clusterbuildpack.html) page.

### <a id='online-stack-update'></a> Cluster stacks update

Cluster stacks are now managed by kapp controller. You need to create new resources and reference them in your builder if you want to change them.

This section describes how to update individual cluster stacks. This provides a more fine-grained way to patch operating system packages.

New stack versions are provided on the [Tanzu Build Service Dependencies](https://network.tanzu.vmware.com/products/tbs-dependencies/) page on Tanzu Network.

To update specific cluster stacks, go to the latest release of the [Tanzu Build Service Dependencies](https://network.tanzu.vmware.com/products/tbs-dependencies/)
page on Tanzu Network to find the image references and their `<sha256>` sums. Example commands are provided on this page.

Use the following `kp` CLI commands to update the desired stack:

```
kp clusterstack update base \
  --build-image registry.tanzu.vmware.com/tbs-dependencies/build-base@<sha256> \
  --run-image registry.tanzu.vmware.com/tbs-dependencies/run-base@<sha256>

kp clusterstack update default \
  --build-image registry.tanzu.vmware.com/tbs-dependencies/build-full@<sha256> \
  --run-image registry.tanzu.vmware.com/tbs-dependencies/run-full@<sha256>

kp clusterstack update full \
  --build-image registry.tanzu.vmware.com/tbs-dependencies/build-full@<sha256> \
  --run-image registry.tanzu.vmware.com/tbs-dependencies/run-full@<sha256>

kp clusterstack update tiny \
  --build-image registry.tanzu.vmware.com/tbs-dependencies/build-tiny@<sha256> \
  --run-image registry.tanzu.vmware.com/tbs-dependencies/run-tiny@<sha256>
```

<p class="note"><strong>Note:</strong> Both build and run images need to be provided to update the stack.</p>

To view the updated ClusterStack, run:

```
kp clusterstack status <stack-name>
```

Example output:

```
$ kp clusterstack status tiny
Status:         Ready
Id:             io.paketo.stacks.tiny
Run Image:      gcr.io/build-service-dev/test/run@sha256:34b01fd9a3745fcaa345f8993938291c931f7977cc2bee78ed377da2edc55e3d
Build Image:    gcr.io/build-service-dev/test/build@sha256:5288d9c5b7cf7068d07b5a184f3ec2f124fbc5842401b8b23c74485c4d2ba23a

```

### <a id='online-store-update'></a> Cluster store update

Cluster stores are no longer used. They have been replaced with Cluster Buildpacks. More info on creating Cluster Buildpacks can be found on the the [Creating Custom Cluster Buildpacks](creating-custom-clusterbuildpack.html) page.

## <a id='offline-update'></a> Offline update of dependencies

## Enable Automatic Dependency Updates - airgapped

TBS dependencies can also be configured to be automatically updated in an airgapped environment.

1. Add the following to tbs-values.yaml:

    ```yaml
      dependency_updates:
      allow: true
      scope: <SCOPE>
      include_packages: [""]
      exclude_packages: [""]
    ```
    Where:
    - `SCOPE` is the list of dependencies you would like to be updated.
        The options are:
        - `stacks-only` (default value): only stacks and builders are updated
        - `all`: stacks, builders, and buildpacks are updated
        - `custom`: this list is empty by default, use the `include_packages` key to add packages to be updated

<p class="note"><strong>Note:</strong> The TBS package install and/or the Full Deps Package install will need to be updated after changing tbs-values</p>

2. Login to registry.tanzu.vmware.com and the internal repo on a machine that has internal repo access (assumes the cluster has a secret for the internal repo)
3. Relocate the deps updater package repo with imgpkg to the internal repo
4. Add the Tanzu Build Service Dependency Updates package repository by running:

   ```
   kubectl apply -f - <<EOF
     apiVersion: packaging.carvel.dev/v1alpha1
     kind: PackageRepository
     metadata:
       name: tbs-dependencies-package-repository
       namespace: tap-install
     spec:
       fetch:
         imgpkgBundle:
           image: <internal repo ref>
           tagSelection:
             semver:
             # this should be TAP major.minor.x
               constraints: "1.8.x"
   EOF
   ```
5. Set up ci to watch registry.tanzu.vmware.com/build-service-dependency-updater/package-repo for changes and then relocate to the internal repo automatically. The cluster will be watching the internal repo <optional, but updates wont be automatic without it>